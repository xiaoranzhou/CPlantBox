import sys
sys.path.append("../..")
import plantbox as pb
import rsml_reader as rsml
import estimate_params as es

import math
import numpy as np

# times = [11, 15, 19]  # not in the rsml
# polylines, properties, functions = rsml.read_rsml("RSML/Maize2/DAP19.rsml")

times = [7, 11, 15]  # not in the rsml
polylines, properties, functions = rsml.read_rsml("RSML/Faba_12/DAP15.rsml")
polylines = [[np.array([polylines[i][j][k] / 10 for k in range(0, 3)]) for j in range(0, len(polylines[i])) ] for i in range(0, len(polylines)) ]  # mm -> cm

print("Summary\n*******")
print("Number of roots", len(polylines))
print("\nproperties")
for key in properties.keys():
    print(key)
print("\nfunctions")
for key in functions.keys():
    print(key)
print()

fet = functions["emergence_time"] 

pp = properties["parent-poly"]  # generated by read_rsml
pb = properties["parent-branch"]  # wrong (?)
pl = properties["length"]
pt = properties["type"]

# rsml.plot_rsml(polylines, pt) # looks good

basepolys = []
basetypes = []
baseindices = []
pi = []  # index of the corresponding base root 
pet = []

for i, p in enumerate(polylines):
    pi.append(es.find_base_index(pp, i))
    pet.append(fet[i][0])
    if pp[i] == -1: 
        baseindices.append(i)
        basepolys.append(p)
        basetypes.append(pt[i])  # have type = 0, but there are more
        
nppt = np.array(pt)
print(len(basepolys), "base roots found, ", np.sum(nppt == 1.), " type 1 roots fouond")  # ? genau doppelt soviel, zufall?

# print(baseindices)
# print(pi)  # already sorted by base root
print(pet)
polylines0, properties0 = es.measurement_time(polylines, properties, functions, times[0])
polylines1, properties1 = es.measurement_time(polylines, properties, functions, times[1])
polylines2, properties2 = es.measurement_time(polylines, properties, functions, times[2])
visprop = "type"
pt0 = properties0[visprop]
pt1 = properties1[visprop]
pt2 = properties2[visprop]
rsml.plot_multiple_rsml([polylines0, polylines1, polylines2], [pt0, pt1, pt2], times)  # looks good

# rsml.plot_rsml(basepolys, basetypes)  # looks all right
print("fin.")

